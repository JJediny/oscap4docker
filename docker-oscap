#!/bin/bash
#
# Copyright (c) 2014--2015 Šimon Lukašík
#
# This software is licensed to you under the GNU General Public License,
# version 3 (GPLv3). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv3
# along with this software; if not, see http://www.gnu.org/licenses/gpl.txt
#

set -x
set -e -o pipefail
image_name=$1; shift
oscap_arguments="$@"

function docker_mount_image(){
	# -- 'docker mount' will be hopefully comming later to docker
	local image_name=$1
	local target_dir=$2
	local tmp=`mktemp -d docker.XXXXXX`
	# `docker mount` command is coming later
	/usr/bin/docker save $image_name | tar x --directory $tmp
	# layers now in the working directory
	for layer in `find $tmp/* -maxdepth 1 -type d`; do
		if tar tvf $layer/layer.tar | grep . > /dev/null; then
			# TODO: layer ordering: can multiple layers contain data?
			tar xf $layer/layer.tar --directory $target_dir
		fi
	done
	rm -r $tmp
}

function docker_umount_image(){
	rm -r $1
}

function oscap_chroot(){
	local image=$1; shift
	local path=$1; shift
	local oscap_arguments="$@"

	# Learn more at https://www.redhat.com/archives/open-scap-list/2013-July/msg00000.html
	export OSCAP_PROBE_RPMDB_PATH="$path"
	export OSCAP_PROBE_OS_NAME="Linux"
	export OSCAP_PROBE_OS_VERSION=`uname --kernel-release`
	export OSCAP_PROBE_ARCHITECTURE=`uname --hardware-platform`
	export OSCAP_PROBE_PRIMARY_HOST_NAME="docker-image-$image"
	/usr/bin/oscap $oscap_arguments
}

image_root=`mktemp -d docker.XXXXXX`

docker_mount_image $image_name $image_root
oscap_chroot $image_name $image_root $oscap_arguments
docker_umount_image $image_root
